services:
  - name: api-gateway
    type: web  # API Gateway should be accessible via HTTP
    env: docker
    repo: https://github.com/vi5hnuu/shakti-service-microservice-
    plan: standard
    dockerfilePath: ./api-gateway/Dockerfile
    envVars:
      - key: EUREKA_CLIENT
        value: api-gateway
      - key: EUREKA_SERVER
        value: discovery-service
    healthCheckPath: /
    autoDeploy: false

  - name: discovery-service
    type: web  # Discovery service should be accessible by other services
    env: docker
    repo: https://github.com/vi5hnuu/shakti-service-microservice-
    plan: standard
    dockerfilePath: ./discovery-server/Dockerfile
    envVars:
      - key: PORT
        value: 8761
    autoDeploy: false

  - name: auth-service
    type: private-service  # Internal service (no external HTTP access)
    env: docker
    repo: https://github.com/vi5hnuu/shakti-service-microservice-
    plan: standard
    dockerfilePath: ./auth-service/Dockerfile
    envVars:
      - key: MYSQL_USERNAME
        value: root
      - key: MYSQL_PASSWORD
        value: pass
      - key: MYSQL_HOST
        value: shakti-mysql
      - key: EUREKA_CLIENT
        value: auth-service
      - key: EUREKA_SERVER
        value: discovery-service
      - key: KAFKA_HOST
        value: kafka-broker
    autoDeploy: false

  - name: notification-service
    type: private-service
    env: docker
    repo: https://github.com/vi5hnuu/shakti-service-microservice-
    plan: standard
    dockerfilePath: ./notification-service/Dockerfile
    envVars:
      - key: MYSQL_USERNAME
        value: root
      - key: MYSQL_PASSWORD
        value: pass
      - key: MYSQL_HOST
        value: shakti-mysql
      - key: EUREKA_CLIENT
        value: notification-service
      - key: EUREKA_SERVER
        value: discovery-service
      - key: KAFKA_HOST
        value: kafka-broker
    autoDeploy: false

  - name: app-service
    type: private-service
    env: docker
    repo: https://github.com/vi5hnuu/shakti-service-microservice-
    plan: standard
    dockerfilePath: ./app-service/Dockerfile
    envVars:
      - key: MYSQL_USERNAME
        value: root
      - key: MYSQL_PASSWORD
        value: pass
      - key: MYSQL_HOST
        value: shakti-mysql
      - key: EUREKA_CLIENT
        value: app-service
      - key: EUREKA_SERVER
        value: discovery-service
    autoDeploy: false

  - name: shakti-mysql
    type: database
    plan: free  # Upgrade if needed
    databaseName: shakti-db
    user: root
    envVars:
      - key: MYSQL_ROOT_PASSWORD
        value: pass
    autoDeploy: false

  - name: kafka-broker
    type: private-service  # Kafka should not be publicly accessible
    env: docker
    repo: https://github.com/vi5hnuu/shakti-service-microservice-
    plan: standard
    dockerfilePath: ./kafka/Dockerfile
    envVars:
      - key: KAFKA_BROKER_ID
        value: "1"
      - key: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
        value: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT"
      - key: KAFKA_ADVERTISED_LISTENERS
        value: "PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092"
      - key: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
        value: "1"
      - key: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
        value: "0"
      - key: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
        value: "1"
      - key: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
        value: "1"
      - key: KAFKA_PROCESS_ROLES
        value: "broker,controller"
      - key: KAFKA_NODE_ID
        value: "1"
      - key: KAFKA_CONTROLLER_QUORUM_VOTERS
        value: "1@broker:29093"
      - key: KAFKA_LISTENERS
        value: "PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092"
      - key: KAFKA_INTER_BROKER_LISTENER_NAME
        value: "PLAINTEXT"
      - key: KAFKA_CONTROLLER_LISTENER_NAMES
        value: "CONTROLLER"
      - key: KAFKA_LOG_DIRS
        value: "/tmp/kraft-combined-logs"
      - key: CLUSTER_ID
        value: "MkU3OEVBNTcwNTJENDM2Qk"
    autoDeploy: false
